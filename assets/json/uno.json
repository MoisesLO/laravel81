[
  {
    "titulo": "1.1 Instalación",
    "contenido": "<section>\n  <h1>Instalación</h1>\n  <ul>\n    <li>Instalación\n      <ul>\n        <li>Requisitos del servidor</li>\n        <li>Instalación de Laravel</li>\n        <li>Configuración</li>\n      </ul></li>\n    <li>Configuración del servidor web\n      <ul>\n        <li>Configuración de directorio</li>\n        <li>URL bonitas</li>\n      </ul></li>\n  </ul>\n  <p></p>\n  <h2 id=\"installation\">Instalación</h2>\n  <p></p>\n  <h3 id=\"server-requirements\">Requisitos del servidor</h3>\n  <p>El marco de Laravel tiene algunos requisitos del sistema. La máquina virtual de Laravel Homestead satisface todos estos requisitos , por lo que se recomienda encarecidamente que utilice Homestead como su entorno de desarrollo local de Laravel.</p>\n  <p>Sin embargo, si no está utilizando Homestead, deberá asegurarse de que su servidor cumpla con los siguientes requisitos:</p>\n  <div class=\"content-list\">\n    <ul>\n      <li>PHP&gt; = 7.3</li>\n      <li>Extensión PHP BCMath</li>\n      <li>Extensión PHP Ctype</li>\n      <li>Extensión PHP Fileinfo</li>\n      <li>Extensión PHP JSON</li>\n      <li>Extensión PHP Mbstring</li>\n      <li>Extensión PHP OpenSSL</li>\n      <li>Extensión PHP PDO</li>\n      <li>Extensión PHP Tokenizer</li>\n      <li>Extensión PHP XML</li>\n    </ul>\n  </div>\n  <p></p>\n  <h3 id=\"installing-laravel\">Instalación de Laravel</h3>\n  <p>Laravel utiliza Composer para administrar sus dependencias. Por lo tanto, antes de usar Laravel, asegúrese de tener Composer instalado en su máquina.</p>\n  <h4>A través del instalador de Laravel</h4>\n  <p>Primero, descargue el instalador de Laravel usando Composer:</p>\n  <pre><code>composer global require laravel/installer</code></pre>\n  <p>Asegúrate de colocar el directorio bin del proveedor de todo el sistema de Composer en tu <code>$PATH</code>para que tu sistema pueda localizar el ejecutable de laravel. Este directorio existe en diferentes ubicaciones según su sistema operativo; sin embargo, algunas ubicaciones comunes incluyen:</p>\n  <div class=\"content-list\">\n    <ul>\n      <li>Mac OS: <code>$HOME/.composer/vendor/bin</code></li>\n      <li>Ventanas: <code>%USERPROFILE%\\AppData\\Roaming\\Composer\\vendor\\bin</code></li>\n      <li>Distribuciones GNU / Linux: o<code>$HOME/.config/composer/vendor/bin</code><code>$HOME/.composer/vendor/bin</code></li>\n    </ul>\n  </div>\n  <p>También puede encontrar la ruta de instalación global del compositor ejecutando y mirando hacia arriba desde la primera línea.<code>composer global about</code></p>\n  <p>Una vez instalado, el comando creará una nueva instalación de Laravel en el directorio que especifique. Por ejemplo, creará un directorio llamado que contiene una nueva instalación de Laravel con todas las dependencias de Laravel ya instaladas:<code>laravel new</code><code>laravel new blog</code><code>blog</code></p>\n  <pre><code>laravel new blog</code></pre>\n  <blockquote>\n    <div class=\"callout\"><div class=\"icon purple\"><img src=\"/img/callouts/lightbulb.min.svg\"></div><p class=\"content\">¿Quiere crear un proyecto de Laravel con inicio de sesión, registro y más funciones ya creadas para usted? Echa un vistazo a Laravel Jetstream .</p></div>\n  </blockquote>\n  <h4>A través de Composer Create-Project</h4>\n  <p>Alternativamente, también puede instalar Laravel emitiendo el comando Composer en su terminal:<code>create-project</code></p>\n  <pre><code>composer create-project --prefer-dist laravel/laravel blog</code></pre>\n  <h4>Servidor de desarrollo local</h4>\n  <p>Si tiene PHP instalado localmente y le gustaría usar el servidor de desarrollo integrado de PHP para servir su aplicación, puede usar el <code>serve</code>comando Artisan. Este comando iniciará un servidor de desarrollo en :<code>http://localhost:8000</code></p>\n  <pre><code>php artisan serve</code></pre>\n  <p>Hay opciones de desarrollo local más sólidas disponibles a través de Homestead y Valet .</p>\n  <p></p>\n  <h3 id=\"configuration\">Configuración</h3>\n  <h4>Directorio público</h4>\n  <p>Después de instalar Laravel, debe configurar el documento / raíz web de su servidor web para que sea el <code>public</code>directorio. El en este directorio sirve como el controlador frontal para todas las solicitudes HTTP que ingresan a su aplicación.<code>index.php</code></p>\n  <h4>Archivos de configuración</h4>\n  <p>Todos los archivos de configuración para el marco de Laravel se almacenan en el <code>config</code>directorio. Cada opción está documentada, así que siéntase libre de revisar los archivos y familiarizarse con las opciones disponibles.</p>\n  <h4>Permisos de directorio</h4>\n  <p>Después de instalar Laravel, es posible que deba configurar algunos permisos. Su servidor web debe poder escribir en los directorios dentro de los directorios <code>storage</code>y los directorios o Laravel no se ejecutará. Si está utilizando la máquina virtual de Homestead , estos permisos ya deberían estar configurados.<code>bootstrap/cache</code></p>\n  <h4>Clave de aplicación</h4>\n  <p>Lo siguiente que debe hacer después de instalar Laravel es configurar la clave de su aplicación en una cadena aleatoria. Si instaló Laravel a través de Composer o el instalador de Laravel, esta clave ya se ha configurado para usted mediante el comando.<code>php artisan key:generate</code></p>\n  <p>Normalmente, esta cadena debe tener 32 caracteres. La clave se puede establecer en el <code>.env</code>archivo de entorno. Si no ha copiado el archivo en un archivo nuevo llamado , debe hacerlo ahora. <strong>Si no se establece la clave de la aplicación, sus sesiones de usuario y otros datos cifrados no estarán seguros.</strong><code>.env.example</code><code>.env</code><strong></strong></p>\n  <h4>Configuración adicional</h4>\n  <p>Laravel no necesita casi ninguna otra configuración lista para usar. ¡Eres libre de comenzar a desarrollar! Sin embargo, es posible que desee revisar el archivo y su documentación. Contiene varias opciones como y que quizás desee cambiar de acuerdo con su aplicación.<code>config/app.php</code><code>timezone</code><code>locale</code></p>\n  <p>Es posible que también desee configurar algunos componentes adicionales de Laravel, como:</p>\n  <div>\n    <ul>\n      <li>Cache</li>\n      <li>Base de datos</li>\n      <li>Sesión</li>\n    </ul>\n  </div>\n  <p></p>\n  <h2 id=\"web-server-configuration\">Configuración del servidor web</h2>\n  <p></p>\n  <h3 id=\"directory-configuration\">Configuración de directorio</h3>\n  <p>Laravel siempre debe servirse desde la raíz del \"directorio web\" configurado para su servidor web. No debe intentar servir una aplicación de Laravel desde un subdirectorio del \"directorio web\". Intentar hacerlo podría exponer archivos confidenciales presentes dentro de su aplicación.</p>\n  <p></p>\n  <h3 id=\"pretty-urls\">URL bonitas</h3>\n  <h4>apache</h4>\n  <p>Laravel incluye un archivo que se usa para proporcionar URL sin el controlador frontal en la ruta. Antes de servir Laravel con Apache, asegúrese de habilitar el módulo para que el servidor respete el archivo.<code>public/.htaccess</code><code>index.php</code><code>mod_rewrite</code><code>.htaccess</code></p>\n  <p>Si el <code>.htaccess</code>archivo que viene con Laravel no funciona con su instalación de Apache, pruebe esta alternativa:</p>\n  <pre><code>Options +FollowSymLinks -Indexes<font>\nRewriteEngine On<font>\n<font>\nRewriteCond %{HTTP:Authorization} .\nRewriteRule .* - [E=HTTP_AUTHORIZATION:%{HTTP:Authorization}]<font>\n<font>\nRewriteCond %{REQUEST_FILENAME} !-d<font>\nRewriteCond %{REQUEST_FILENAME} !-f<font>\nRewriteRule ^ index.php [L]</code></pre>\n  <h4>Nginx</h4>\n  <p>Si está utilizando Nginx, la siguiente directiva en la configuración de su sitio dirigirá todas las solicitudes al controlador frontal:<code>index.php</code></p>\n  <pre><code>location / {\n    try_files $uri $uri/ /index.php?$query_string;\n}</code></pre>\n  <p>Al usar Homestead o Valet , se configurarán automáticamente URL bonitas.</p>\n</section>"
  }
]